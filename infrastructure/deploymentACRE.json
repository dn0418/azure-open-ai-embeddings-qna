{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ResourcePrefix": {
      "type": "string",
      "metadata": {
        "description": "provide a 2-13 character prefix for all resources."
      }
    },
    "RedisName": {
      "type": "string",
      "defaultValue": "[concat(parameters('ResourcePrefix'), '-redis')]",
      "metadata": {
        "description": "Redis Hostname"
      }
    },
	"RedisPort": {
      "type": "int",
      "defaultValue": 10000,
      "metadata": {
        "description": "Redis Port"
      }
    },
    "HostingPlanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('ResourcePrefix'), '-plan')]",
      "metadata": {
        "description": "Name of App Service plan"
      }
    },
    "HostingPlanSku": {
      "type": "string",
      "defaultValue": "B3",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "The pricing tier for the App Service plan"
      }
    },
    "StorageAccountName": {
      "type": "string",
      "defaultValue": "[concat(parameters('ResourcePrefix'), 'str')]",
      "metadata": {
        "description": "Name of Storage Account"
      }
    },
    "WebsiteName": {
      "type": "string",
      "defaultValue": "[concat(parameters('ResourcePrefix'), '-site')]",
      "metadata": {
        "description": "Name of Web App"
      }
    },
    "FunctionName": {
      "type": "string",
      "defaultValue": "[concat(parameters('ResourcePrefix'), '-batchfunc')]",
      "metadata": {
        "description": "Name of Function App for Batch document processing"
      }
    },
    "ApplicationInsightsName": {
      "type": "string",
      "defaultValue": "[concat(parameters('ResourcePrefix'), '-appinsights')]",
      "metadata": {
        "description": "Name of Application Insights"
      }
    },
    "OpenAIEndpoint": {
      "type": "string",
      "metadata": {
        "description": "Endpoint of OpenAI Resource"
      }
    },
    "OpenAIKey": {
      "type": "securestring",
      "metadata": {
        "description": "OpenAI API Key"
      }
    },
    "OpenAIEngine": {
      "type": "string",
      "defaultValue": "text-davinci-003",
      "metadata": {
        "description": "OpenAI Engine"
      }
    },
    "OpenAIDeploymentType": {
      "type": "string",
      "defaultValue": "Text",
      "metadata": {
        "description": "OpenAI Deployment Type. Text for an Instructions based deployment (text-davinci-003). Chat for a Chat based deployment (gpt-35-turbo or gpt-4-32k or gpt-4)."
      }
    },
    "OpenAIEmbeddingsEngineDoc": {
      "type": "string",
      "defaultValue": "text-embedding-ada-002",
      "metadata": {
        "description": "OpenAI Embeddings Engine for Documents"
      }
    },
    "OpenAIEmbeddingsEngineQuery": {
      "type": "string",
      "defaultValue": "text-embedding-ada-002",
      "metadata": {
        "description": "OpenAI Embeddings Engine for Queries"
      }
    },
    "OpenAITemperature": {
      "type": "string",
      "defaultValue": "0.7",
      "metadata": {
        "description": "OpenAI Temperature"
      }
    },
    "OpenAIMaxTokens": {
      "type": "string",
      "defaultValue": "-1",
      "metadata": {
        "description": "OpenAI Max Tokens"
      }
    },
    "FormRecognizerEndpoint": {
      "type": "string",
      "metadata": {
        "description": "Form Recognizer Endpoint"
      }
    },
    "FormRecognizerKey": {
      "type": "securestring",
      "metadata": {
        "description": "Form Recognizer Key"
      }
    },
    "TranslateEndpoint": {
      "type": "string",
      "metadata": {
        "description": "Translator Endpoint"
      }
    },
    "TranslateKey": {
      "type": "securestring",
      "metadata": {
        "description": "Translator Key"
      }
    },
    "TranslateRegion": {
      "type": "string",
      "metadata": {
        "description": "Translator Region"
      }
    },
    "newGuid": {
      "type": "string",
      "defaultValue": "[newGuid()]"
    }
  },
  "variables": {
    "WebAppImageName": "DOCKER|fruocco/oai-embeddings",
    "BlobContainerName": "documents",
    "FileShareName": "redisdata",
    "QueueName": "doc-processing",
    "ClientKey": "[concat(uniqueString(guid(resourceGroup().id, deployment().name)), parameters('newGuid'), 'Tg2%')]"
  },
  "resources": [
    {
      "apiVersion": "2020-06-01",
      "name": "[parameters('HostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('HostingPlanSku')]"
      },
      "properties": {
        "name": "[parameters('HostingPlanName')]",
        "reserved": true
      },
      "kind": "linux"
    },
    {
      "apiVersion": "2020-06-01",
      "name": "[parameters('WebsiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('HostingPlanName'))]"
      ],
      "properties": {
        "serverFarmId": "[parameters('HostingPlanName')]",
        "siteConfig": {
          "linuxFxVersion": "[variables('WebAppImageName')]"
        }
      }
    },
    {
            "type": "Microsoft.Cache/redisEnterprise",
            "apiVersion": "2023-03-01-preview",
            "name": "[parameters('RedisName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Enterprise_E10",
                "capacity": 2
            },
            "zones": [
                "1",
                "2",
                "3"
            ],
            "identity": {
                "type": "None"
            },
            "properties": {
                "minimumTlsVersion": "1.2"
            }
    },
    {
            "type": "Microsoft.Cache/redisEnterprise/databases",
            "apiVersion": "2023-03-01-preview",
            "name": "[concat(parameters('RedisName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/redisEnterprise', parameters('RedisName'))]"
            ],
            "properties": {
                "clientProtocol": "Plaintext",
                "port": 10000,
                "clusteringPolicy": "EnterpriseCluster",
                "evictionPolicy": "NoEviction",
                "modules": [
                    {
                        "name": "RedisJSON"
                    },
                    {
                        "name": "RediSearch"
                    }
                ],
                "persistence": {
                    "aofEnabled": false,
                    "rdbEnabled": false
                }
            }
    },
    {
      "name": "[parameters('StorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-08-01",
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_GRS"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-08-01",
      "name": "[concat(parameters('StorageAccountName'), '/default/', variables('BlobContainerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2021-08-01",
      "name": "[concat(parameters('StorageAccountName'), '/default/', variables('FileShareName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "properties": {

        "protocolSettings": {
          "smb": {}
        },
        "cors": {
          "corsRules": []
        },
        "shareDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2022-09-01",
      "name": "[concat(parameters('StorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
      "apiVersion": "2022-09-01",
      "name": "[concat(parameters('StorageAccountName'), '/default/doc-processing')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('StorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "properties": {
        "metadata": {}
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
      "apiVersion": "2022-09-01",
      "name": "[concat(parameters('StorageAccountName'), '/default/doc-processing-poison')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('StorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "properties": {
        "metadata": {}
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('ApplicationInsightsName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "[concat('hidden-link:', resourceId('Microsoft.Web/sites', parameters('ApplicationInsightsName')))]": "Resource"
      },
      "properties": {
        "Application_Type": "web"
      },
      "kind": "web"
    },
    {
      "apiVersion": "2018-11-01",
      "name": "[parameters('FunctionName')]",
      "type": "Microsoft.Web/sites",
      "kind": "functionapp,linux",
      "location": "[resourceGroup().location]",
      "tags": {},
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', parameters('HostingPlanName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('StorageAccountName'))]",
        "[concat('Microsoft.Insights/components/', parameters('ApplicationInsightsName'))]",
		"[resourceId('Microsoft.Cache/redisEnterprise/databases', parameters('RedisName'), 'default')]"
      ],
      "properties": {
        "name": "[parameters('FunctionName')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('ApplicationInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('StorageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
            },
            {
              "name": "OPENAI_API_BASE",
              "value": "[parameters('OpenAIEndpoint')]"
            },
            {
              "name": "OPENAI_API_KEY",
              "value": "[parameters('OpenAIKey')]"
            },
            {
              "name": "OPENAI_TEMPERATURE",
              "value": "[parameters('OpenAITemperature')]"
            },
            {
              "name": "OPENAI_MAX_TOKENS",
              "value": "[parameters('OpenAIMaxTokens')]"
            },
            {
              "name": "OPENAI_EMBEDDINGS_ENGINE_DOC",
              "value": "[parameters('OpenAIEmbeddingsEngineDoc')]"
            },
            {
              "name": "BLOB_ACCOUNT_NAME",
              "value": "[parameters('StorageAccountName')]"
            },
            {
              "name": "BLOB_ACCOUNT_KEY",
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value]"
            },
            {
              "name": "BLOB_CONTAINER_NAME",
              "value": "[variables('BlobContainerName')]"
            },
            {
              "name": "FORM_RECOGNIZER_ENDPOINT",
              "value": "[parameters('FormRecognizerEndpoint')]"
            },
            {
              "name": "FORM_RECOGNIZER_KEY",
              "value": "[parameters('FormRecognizerKey')]"
            },
            {
              "name": "REDIS_ADDRESS",
              "value": "[reference(resourceId('Microsoft.Cache/redisEnterprise', parameters('RedisName')), '2023-03-01-preview').hostName]"
            },
            {
              "name": "REDIS_PASSWORD",
              "value": "[listKeys(resourceId('Microsoft.Cache/redisEnterprise/databases', parameters('RedisName'), 'default'), '2023-03-01-preview').primaryKey]"
            }, 
			{
              "name": "REDIS_PORT",
              "value": 10000
            },
            {
              "name": "TRANSLATE_ENDPOINT",
              "value": "[parameters('TranslateEndpoint')]"
            },
            {
              "name": "TRANSLATE_KEY",
              "value": "[parameters('TranslateKey')]"
            },
            {
              "name": "TRANSLATE_REGION",
              "value": "[parameters('TranslateRegion')]"
            },
            {
              "name": "QUEUE_NAME",
              "value": "[variables('QueueName')]"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "https://portal.azure.com"
            ]
          },
          "use32BitWorkerProcess": false,
          "linuxFxVersion": "DOCKER|fruocco/oai-batch:latest",
          "appCommandLine": "",
          "alwaysOn": true
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('HostingPlanName'))]",
        "clientAffinityEnabled": false,
        "virtualNetworkSubnetId": null,
        "httpsOnly": true
      }
    },
    {
      "type": "Microsoft.Web/sites/host/functionKeys",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('FunctionName'), '/default/clientKey')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('FunctionName'))]",
        "WaitFunctionDeploymentSection"
      ],
      "properties": {
        "name": "ClientKey",
        "value": "[variables('ClientKey')]"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', parameters('WebsiteName'), 'appsettings')]",
      "kind": "string",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('WebsiteName'))]",
        "[concat('Microsoft.Insights/components/', parameters('ApplicationInsightsName'))]",
		"[resourceId('Microsoft.Cache/redisEnterprise/databases', parameters('RedisName'), 'default')]"
      ],
      "properties": {
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', parameters('ApplicationInsightsName')), '2015-05-01').InstrumentationKey]",
        "OPENAI_ENGINE": "[parameters('OpenAIEngine')]",
        "OPENAI_DEPLOYMENT_TYPE": "[parameters('OpenAIDeploymentType')]",
        "OPENAI_EMBEDDINGS_ENGINE_DOC": "[parameters('OpenAIEmbeddingsEngineDoc')]",
        "OPENAI_EMBEDDINGS_ENGINE_QUERY": "[parameters('OpenAIEmbeddingsEngineQuery')]",
        "REDIS_ADDRESS": "[reference(resourceId('Microsoft.Cache/redisEnterprise', parameters('RedisName')), '2023-03-01-preview').hostName]",
        "REDIS_PASSWORD": "[listKeys(resourceId('Microsoft.Cache/redisEnterprise/databases', parameters('RedisName'), 'default'), '2023-03-01-preview').primaryKey]",
		"REDIS_PORT": 10000,
        "OPENAI_API_BASE": "[parameters('OpenAIEndpoint')]",
        "OPENAI_API_KEY": "[parameters('OpenAIKey')]",
        "OPENAI_TEMPERATURE": "[parameters('OpenAITemperature')]",
        "OPENAI_MAX_TOKENS": "[parameters('OpenAIMaxTokens')]",
        "BLOB_ACCOUNT_NAME": "[parameters('StorageAccountName')]",
        "BLOB_ACCOUNT_KEY": "[listkeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')), '2015-05-01-preview').key1]",
        "BLOB_CONTAINER_NAME": "[variables('BlobContainerName')]",
        "FORM_RECOGNIZER_ENDPOINT": "[parameters('FormRecognizerEndpoint')]",
        "FORM_RECOGNIZER_KEY": "[parameters('FormRecognizerKey')]",
        "TRANSLATE_ENDPOINT": "[parameters('TranslateEndpoint')]",
        "TRANSLATE_KEY": "[parameters('TranslateKey')]",
        "TRANSLATE_REGION": "[parameters('TranslateRegion')]",
        "CONVERT_ADD_EMBEDDINGS_URL": "[concat('https://', parameters('FunctionName') , '.azurewebsites.net/api/BatchStartProcessing?code=', variables('ClientKey'))]"
      }
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "kind": "AzurePowerShell",
      "name": "WaitFunctionDeploymentSection",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('FunctionName'))]"
      ],
      "properties": {
        "azPowerShellVersion": "3.0",
        "scriptContent": "start-sleep -Seconds 300",
        "cleanupPreference": "Always",
        "retentionInterval": "PT1H"
      }
    }
  ]
}
